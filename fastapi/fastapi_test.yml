# https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/
apiVersion: apps/v1 # version of Kubernetes API to use
kind: Deployment # type of object to create
metadata: # data to uniquely identify object
  name: testapp-deployment
  namespace: testapp
spec: # state of object
  replicas: 4 # number of pods to start
  selector: # this is how the deployment will find pods to manage
    matchLabels:
      app: testapp-deployment # if it matches the app name
  template: # template of the pod (ie, what is it)
    metadata: # metadata to uniquely identify the pod
      labels:
        app: testapp-deployment
    spec: # specification of the pod
      containers:
        - name: testapp-deployment # it will create a container named `fastapitest`
          image: jcfoxtrot54/fastapitest:latest # using this image from a container registry (Docker hub in this instance)
          ports: # which ports is the container listening on?
          - containerPort: 8000
---

apiVersion: v1
kind: Service
metadata:
  name: testapp-deployment
  labels:
    app: testapp-deployment
spec:
  type: ClusterIP
  ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app: testapp-deployment
    
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: k3stest.foxtrot-titan.co.uk
    http:
      paths:
      - path: /
        backend:
          serviceName: testapp-deployment
          servicePort: 8000
